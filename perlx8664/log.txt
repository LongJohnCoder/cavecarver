perl p.pl --verbose --start='isl::iostreams::filter::detail::parse_hybrid_header(isl::iostreams::filter::detail::xp_block&)' /opt/Xilinx-2015.4-newinstall/Vivado/2015.4/lib/lnx64.o/libisl_iostreams.so 
Start function at 0xf7580000f7580:jmpq   6052f4 <_end+0x19f79c>   jmpq => (0x6052f4)
006052f4:mov    %r15,-0x8(%rsp)          stack[0x7fffffff10000000+-8] <= r15(0x0)
006052f9:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff10000000+-8)
006052fe:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffff8+-8)
00605303:mov    %r14,(%rsp)              stack[0x7fffffff0ffffff0+0] <= r14(0x0)
00605307:mov    %r13,-0x8(%rsp)          stack[0x7fffffff0ffffff0+-8] <= r13(0x0)
0060530c:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffff0+-8)
00605311:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0fffffe8+-8)
00605316:mov    %r12,(%rsp)              stack[0x7fffffff0fffffe0+0] <= r12(0x0)
0060531a:push   %rsi                     stack[0x7fffffff0fffffe0-8] <= (0x0)
0060531b:pop    %r12                     
0060531d:jmpq   57bea8 <_end+0x116350>   jmpq => (0x57bea8)
0057bea8:mov    %rbp,-0x8(%rsp)          stack[0x7fffffff0fffffd8+-8] <= rbp(0x0)
0057bead:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0fffffd8+-8)
0057beb2:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0fffffd0+-8)
0057beb7:mov    %rbx,(%rsp)              stack[0x7fffffff0fffffc8+0] <= rbx(0x0)
0057bebb:sub    $0x288,%rsp              rsp <= (0x7fffffff0fffffc8-648)
0057bec2:lea    0x110(%rsp),%rbx         rbx <= rsp(0x7fffffff0ffffd40+272)
0057beca:mov    %rdi,0x10(%rsp)          stack[0x7fffffff0ffffd40+16] <= rdi(0x0)
0057becf:lea    0x68(%rbx),%rdi          rdi <= rbx(0x7fffffff0ffffe50+104)
0057bed3:jmpq   f75a5 <isl::iostreams:...jmpq => (0xf75a5)
000f75a5:callq  a6e60 <std::ios_base::...
000f75aa:jmpq   511df7 <_end+0xac29f>    jmpq => (0x511df7)
00511df7:mov    -0xb4cde(%rip),%rbp   ...
00511dfe:mov    -0xb5a9d(%rip),%rax   ...
00511e05:push   %rbx                     stack[0x7fffffff0ffffd40-8] <= (0x7fffffff0ffffe50)
00511e06:pop    %rdi                     
00511e07:movq   $0x0,0x250(%rsp)         
00511e13:movb   $0x0,0x258(%rsp)         
00511e1b:jmpq   68056c <_end+0x21aa14>   jmpq => (0x68056c)
0068056c:xor    %esi,%esi                
0068056e:movb   $0x0,0x259(%rsp)         
00680576:movq   $0x0,0x260(%rsp)         
00680582:mov    0x10(%rbp),%r13          
00680586:add    $0x10,%rax               rax <= (0x0+16)
0068058a:movq   $0x0,0x268(%rsp)         
00680596:jmpq   5497c5 <_end+0xe3c6d>    jmpq => (0x5497c5)
005497c5:mov    %rax,0x178(%rsp)         stack[0x7fffffff0ffffd38+376] <= rax(0x10)
005497cd:movq   $0x0,0x270(%rsp)         
005497d9:movq   $0x0,0x278(%rsp)         
005497e5:mov    0x18(%rbp),%r14          
005497e9:mov    %r13,0x110(%rsp)         stack[0x7fffffff0ffffd38+272] <= r13(0x0)
005497f1:mov    -0x18(%r13),%rax         
005497f5:mov    %r14,0x110(%rsp,%rax,1)  
005497fd:mov    0x110(%rsp),%rax         
00549805:movq   $0x0,0x118(%rsp)         
00549811:add    -0x18(%rax),%rdi         
00549815:jmpq   f7649 <isl::iostreams:...jmpq => (0xf7649)
000f7649:callq  ab780 <std::basic_ios<...
000f764e:jmpq   63a967 <_end+0x1d4e0f>   jmpq => (0x63a967)
0063a967:mov    0x20(%rbp),%rax          
0063a96b:mov    0x28(%rbp),%rdx          
0063a96f:xor    %esi,%esi                
0063a971:mov    %rax,0x120(%rsp)         stack[0x7fffffff0ffffd38+288] <= rax(0x10)
0063a979:mov    -0x18(%rax),%rax         
0063a97d:mov    %rdx,0x120(%rsp,%rax,1)  
0063a985:mov    0x120(%rsp),%rax         
0063a98d:mov    -0x18(%rax),%rax         
0063a991:lea    0x10(%rbx,%rax,1),%rdi   
0063a996:jmpq   f767d <isl::iostreams:...jmpq => (0xf767d)
000f767d:callq  ab780 <std::basic_ios<...
000f7682:jmpq   549c5a <_end+0xe4102>    jmpq => (0x549c5a)
00549c5a:mov    0x8(%rbp),%rax           
00549c5e:mov    0x30(%rbp),%rdx          
00549c62:lea    0x50(%rbx),%rdi          rdi <= rbx(0x7fffffff0ffffe50+80)
00549c66:mov    %rax,0x110(%rsp)         stack[0x7fffffff0ffffd38+272] <= rax(0x10)
00549c6e:jmpq   524acc <_end+0xbef74>    jmpq => (0x524acc)
00524acc:mov    -0x18(%rax),%rax         
00524ad0:mov    %rdx,0x110(%rsp,%rax,1)  
00524ad8:mov    -0xc86af(%rip),%rax   ...
00524adf:movq   $0x0,0x130(%rsp)         
00524aeb:movq   $0x0,0x138(%rsp)         
00524af7:jmpq   5466b7 <_end+0xe0b5f>    jmpq => (0x5466b7)
005466b7:movq   $0x0,0x140(%rsp)         
005466c3:movq   $0x0,0x148(%rsp)         
005466cf:add    $0x18,%rax               rax <= (0x10+24)
005466d3:jmpq   53215b <_end+0xcc603>    jmpq => (0x53215b)
0053215b:movq   $0x0,0x150(%rsp)         
00532167:movq   $0x0,0x158(%rsp)         
00532173:mov    %rax,0x110(%rsp)         stack[0x7fffffff0ffffd38+272] <= rax(0x28)
0053217b:mov    -0xd5d52(%rip),%rax   ...
00532182:add    $0x68,%rax               rax <= (0x28+104)
00532186:mov    %rax,0x178(%rsp)         stack[0x7fffffff0ffffd38+376] <= rax(0x90)
0053218e:mov    -0xd5d65(%rip),%rax   ...
00532195:jmpq   5711c1 <_end+0x10b669>   jmpq => (0x5711c1)
005711c1:add    $0x40,%rax               rax <= (0x90+64)
005711c5:mov    %rax,0x120(%rsp)         stack[0x7fffffff0ffffd38+288] <= rax(0xd0)
005711cd:mov    -0x1149ec(%rip),%rax  ...
005711d4:add    $0x10,%rax               rax <= (0xd0+16)
005711d8:mov    %rax,0x128(%rsp)         stack[0x7fffffff0ffffd38+296] <= rax(0xe0)
005711e0:jmpq   f7736 <isl::iostreams:...jmpq => (0xf7736)
000f7736:callq  ae330 <std::locale::lo...
000f773b:jmpq   63a47b <_end+0x1d4923>   jmpq => (0x63a47b)
0063a47b:mov    -0x1dd48a(%rip),%rax  ...
0063a482:lea    0x18(%rbx),%rsi          rsi <= rbx(0x7fffffff0ffffe50+24)
0063a486:lea    0x68(%rbx),%rdi          rdi <= rbx(0x7fffffff0ffffe50+104)
0063a48a:movl   $0x18,0x168(%rsp)        
0063a495:add    $0x10,%rax               rax <= (0xe0+16)
0063a499:mov    %rax,0x128(%rsp)         stack[0x7fffffff0ffffd38+296] <= rax(0xf0)
0063a4a1:mov    -0x1de0f8(%rip),%rax  ...
0063a4a8:add    $0x18,%rax               rax <= (0xf0+24)
0063a4ac:mov    %rax,0x170(%rsp)         stack[0x7fffffff0ffffd38+368] <= rax(0x108)
0063a4b4:jmpq   f7774 <isl::iostreams:...jmpq => (0xf7774)
000f7774:callq  ab780 <std::basic_ios<...
000f7779:jmpq   630d9f <_end+0x1cb247>   jmpq => (0x630d9f)
00630d9f:lea    0x100(%rsp),%r15         r15 <= rsp(0x7fffffff0ffffd38+256)
00630da7:lea    0x10(%r12),%rsi          rsi <= r12(0x0+16)
00630dac:mov    $0x8,%edx                
00630db1:movq   $0x0,0xf0(%rsp)          
00630dbd:movq   $0x0,0x100(%rsp)         
00630dc9:mov    %r15,%rdi                
00630dcc:movb   $0x0,0x108(%rsp)         
00630dd4:jmpq   f77ae <isl::iostreams:...jmpq => (0xf77ae)
000f77ae:callq  a8030 <strncpy@plt>      
000f77b3:jmpq   67b61f <_end+0x215ac7>   jmpq => (0x67b61f)
0067b61f:lea    0xf0(%rsp),%rax          rax <= rsp(0x7fffffff0ffffd38+240)
0067b627:lea    -0x4a3ed1(%rip),%rsi  ...rsi <= (0x1d775d)
0067b62e:mov    %r15,-0x8(%rsp)          stack[0x7fffffff0ffffd38+-8] <= r15(0x7fffffff0ffffe38)
0067b633:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd38+-8)
0067b638:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd30+8)
0067b63d:mov    -0x8(%rsp),%rdi          
0067b642:jmpq   546b64 <_end+0xe100c>    jmpq => (0x546b64)
00546b64:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd38+-8)
00546b69:mov    %rax,(%rsp)              stack[0x7fffffff0ffffd30+0] <= rax(0x7fffffff0ffffe28)
00546b6d:mov    (%rsp),%rdx              
00546b71:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd30+8)
00546b76:mov    %rax,0x18(%rsp)          stack[0x7fffffff0ffffd38+24] <= rax(0x7fffffff0ffffe28)
00546b7b:xor    %eax,%eax                
00546b7d:jmpq   f77cf <isl::iostreams:...jmpq => (0xf77cf)
000f77cf:callq  a8c50 <sscanf@plt>       
000f77d4:jmpq   67af58 <_end+0x215400>   jmpq => (0x67af58)
0067af58:mov    0xf0(%rsp),%rdx          
0067af60:lea    0x18(%r12),%rsi          rsi <= r12(0x0+24)
0067af65:lea    0x10(%rbx),%rdi          rdi <= rbx(0x7fffffff0ffffe50+16)
0067af69:jmpq   f77e5 <isl::iostreams:...jmpq => (0xf77e5)
000f77e5:callq  ab4c0 <std::ostream::w...
000f77ea:jmpq   51cf43 <_end+0xb73eb>    jmpq => (0x51cf43)
0051cf43:lea    0x90(%rsp),%rsi          rsi <= rsp(0x7fffffff0ffffd38+144)
0051cf4b:mov    $0x2,%edx                
0051cf50:mov    %rbx,-0x8(%rsp)          stack[0x7fffffff0ffffd38+-8] <= rbx(0x7fffffff0ffffe50)
0051cf55:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd38+-8)
0051cf5a:mov    (%rsp),%rdi              
0051cf5e:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd30+8)
0051cf63:jmpq   f77fa <isl::iostreams:...jmpq => (0xf77fa)
000f77fa:callq  ab2a0 <std::istream::r...
000f77ff:jmpq   5594c3 <_end+0xf396b>    jmpq => (0x5594c3)
005594c3:movswq 0x90(%rsp),%rax          
005594cc:movq   $0x0,0x30(%rsp)          
005594d5:movswl %ax,%edi                 
005594d8:add    $0x1,%edi                edi <= (0x0+1)
005594db:movslq %edi,%rdi                
005594de:test   %rdi,%rdi                
005594e1:push   %rbp                     stack[0x7fffffff0ffffd38-8] <= (0x0)
005594e2:lea    -0x461629(%rip),%rbp  ...rbp <= (0xf7ec0)
005594e9:push   %rbp                     stack[0x7fffffff0ffffd30-8] <= (0xf7ec0)
005594ea:lea    -0x461cce(%rip),%rbp  ...rbp <= (0xf7823)
005594f1:cmovne (%rsp),%rbp              rbp => $VAR1 = 1013795;
()
005594f6:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd28+8)
005594fb:xchg   %rbp,(%rsp)              stack[0x7fffffff0ffffd30] <= rbp(0x0)
005594ff:retq                            retq -----------------------  sp:0x7fffffff0ffffd30=> (0xf7823,0xf7ec0)
000f7823:jmpq   606ae3 <_end+0x1a0f8b>   jmpq => (0x606ae3)
000f7ec0:callq  aa060 <operator new(un...
000f7ec5:jmpq   639f86 <_end+0x1d442e>   jmpq => (0x639f86)
00606ae3:mov    0x30(%rsp),%r14          
00606ae8:push   %rbx                     stack[0x7fffffff0ffffd30-8] <= (0x7fffffff0ffffe50)
00606ae9:pop    %rdi                     
00606aea:movb   $0x0,(%r14,%rax,1)       
00606aef:movswq 0x90(%rsp),%rdx          
00606af8:mov    %r14,%rsi                
00606afb:jmpq   f783c <isl::iostreams:...jmpq => (0xf783c)
00639f86:mov    %rax,0x30(%rsp)          stack[0x7fffffff0ffffd28+48] <= rax(0x7fffffff0ffffe28)
00639f8b:movswq 0x90(%rsp),%rax          
00639f94:mov    %rsi,-0x8(%rsp)          stack[0x7fffffff0ffffd28+-8] <= rsi(0x7fffffff0ffffdc8)
00639f99:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd28+-8)
00639f9e:lea    -0x542782(%rip),%rsi  ...rsi <= (0xf7823)
00639fa5:xchg   %rsi,(%rsp)              stack[0x7fffffff0ffffd20] <= rsi(0x0)
00639fa9:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd20+8)
00639fae:jmpq   *-0x8(%rsp)              jmpq => -----------------------  (0xf7823)
000f783c:callq  ab2a0 <std::istream::r...
000f7841:jmpq   571655 <_end+0x10bafd>   jmpq => (0x571655)
00571655:movswl 0x90(%rsp),%eax          
0057165d:lea    0x1(%rax,%rax,1),%edi    
00571661:movslq %edi,%rdi                
00571664:jmpq   f7850 <isl::iostreams:...jmpq => (0xf7850)
000f7850:callq  aa060 <operator new(un...
000f7855:jmpq   51dba8 <_end+0xb8050>    jmpq => (0x51dba8)
0051dba8:mov    %rax,-0x8(%rsp)          stack[0x7fffffff0ffffd28+-8] <= rax(0x7fffffff0ffffe28)
0051dbad:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd28+-8)
0051dbb2:mov    (%rsp),%rcx              
0051dbb6:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd20+8)
0051dbbb:mov    %rax,0x40(%rsp)          stack[0x7fffffff0ffffd28+64] <= rax(0x7fffffff0ffffe28)
0051dbc0:movswl 0x90(%rsp),%eax          
0051dbc8:mov    %rcx,%rsi                
0051dbcb:mov    %r14,%rdi                
0051dbce:add    %eax,%eax                
0051dbd0:cltq                            
0051dbd2:movb   $0x0,(%rcx,%rax,1)       
0051dbd6:movswq 0x90(%rsp),%rdx          
0051dbdf:jmpq   f787c <isl::iostreams:...jmpq => (0xf787c)
000f787c:callq  a95e0 <isl::iostreams:...
000f7881:jmpq   511aed <_end+0xabf95>    jmpq => (0x511aed)
00511aed:lea    0xa0(%rsp),%rsi          rsi <= rsp(0x7fffffff0ffffd28+160)
00511af5:mov    $0x2,%edx                
00511afa:push   %rbx                     stack[0x7fffffff0ffffd28-8] <= (0x7fffffff0ffffe50)
00511afb:pop    %rdi                     
00511afc:jmpq   f7891 <isl::iostreams:...jmpq => (0xf7891)
000f7891:callq  ab2a0 <std::istream::r...
000f7896:jmpq   18f242 <PEM_write+0xa2>  jmpq => (0x18f242)
0018f242:mov    $0x180,%edi              
0018f247:jmpq   f789b <isl::iostreams:...jmpq => (0xf789b)
000f789b:callq  aa060 <operator new(un...
000f78a0:jmpq   63a141 <_end+0x1d45e9>   jmpq => (0x63a141)
0063a141:mov    $0x180,%edi              
0063a146:mov    %rax,0x28(%rsp)          stack[0x7fffffff0ffffd20+40] <= rax(0x7fffffff0ffffe28)
0063a14b:jmpq   f78aa <isl::iostreams:...jmpq => (0xf78aa)
000f78aa:callq  aa060 <operator new(un...
000f78af:jmpq   67cdcb <_end+0x217273>   jmpq => (0x67cdcb)
0067cdcb:cmpw   $0x0,0xa0(%rsp)          
0067cdd4:mov    %rax,0x38(%rsp)          stack[0x7fffffff0ffffd20+56] <= rax(0x7fffffff0ffffe28)
0067cdd9:mov    %rbp,-0x8(%rsp)          stack[0x7fffffff0ffffd20+-8] <= rbp(0x0)
0067cdde:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd20+-8)
0067cde3:lea    -0x58502b(%rip),%rbp  ...rbp <= (0xf7dbf)
0067cdea:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd18+-8)
0067cdef:mov    %rbp,(%rsp)              stack[0x7fffffff0ffffd10+0] <= rbp(0xf7dbf)
0067cdf3:lea    -0x585537(%rip),%rbp  ...rbp <= (0xf78c3)
0067cdfa:cmovle (%rsp),%rbp              rbp => $VAR1 = 1013955;
()
0067cdff:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd10+8)
0067ce04:xchg   %rbp,(%rsp)              stack[0x7fffffff0ffffd18] <= rbp(0x0)
0067ce08:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd18+8)
0067ce0d:jmpq   *-0x8(%rsp)              jmpq => -----------------------   (0xf78c3,0xf7dbf)
000f78c3:jmpq   fc854 <(anonymous name...jmpq => (0xfc854)
000f7dbf:jmpq   602c6f <_end+0x19d117>   jmpq => (0x602c6f)
000fc854:xor    %eax,%eax                
000fc856:mov    %ax,0x5e(%rsp)           stack[0x7fffffff0ffffd20+94] <= ax(0x0)
000fc85b:lea    0xb0(%rsp),%rax          rax <= rsp(0x7fffffff0ffffd20+176)
000fc863:mov    %rax,0x60(%rsp)          stack[0x7fffffff0ffffd20+96] <= rax(0x7fffffff0ffffdd0)
000fc868:lea    0xe0(%rsp),%rax          rax <= rsp(0x7fffffff0ffffd20+224)
000fc870:mov    %rax,0x48(%rsp)          stack[0x7fffffff0ffffd20+72] <= rax(0x7fffffff0ffffe00)
000fc875:lea    0x8f(%rsp),%rax          rax <= rsp(0x7fffffff0ffffd20+143)
000fc87d:mov    %rax,0x50(%rsp)          stack[0x7fffffff0ffffd20+80] <= rax(0x7fffffff0ffffdaf)
000fc882:lea    0xc0(%rsp),%rax          rax <= rsp(0x7fffffff0ffffd20+192)
000fc88a:mov    %rax,0x20(%rsp)          stack[0x7fffffff0ffffd20+32] <= rax(0x7fffffff0ffffde0)
000fc88f:lea    0xd0(%rsp),%rax          rax <= rsp(0x7fffffff0ffffd20+208)
000fc897:mov    %rax,0x70(%rsp)          stack[0x7fffffff0ffffd20+112] <= rax(0x7fffffff0ffffdf0)
000fc89c:jmpq   f790b <isl::iostreams:...jmpq => (0xf790b)
00602c6f:mov    0x10(%rsp),%rax          
00602c74:mov    $0x70,%edi               
00602c79:movq   $0x0,(%rax)              
00602c80:movq   $0x0,0x8(%rax)           
00602c88:jmpq   f7dd8 <isl::iostreams:...jmpq => (0xf7dd8)
000f790b:jmpq   516675 <_end+0xb0b1d>    jmpq => (0x516675)
000f7dd8:callq  aa060 <operator new(un...
000f7ddd:jmpq   5e081a <_end+0x17acc2>   jmpq => (0x5e081a)
00516675:mov    0x60(%rsp),%rsi          
0051667a:mov    $0x2,%edx                
0051667f:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd20+-8)
00516684:mov    %rbx,(%rsp)              stack[0x7fffffff0ffffd18+0] <= rbx(0x7fffffff0ffffe50)
00516688:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd18+8)
0051668d:mov    -0x8(%rsp),%rdi          
00516692:jmpq   f7918 <isl::iostreams:...jmpq => (0xf7918)
005e081a:xor    %ecx,%ecx                
005e081c:xor    %edx,%edx                
005e081e:mov    $0x100,%esi              
005e0823:push   %rax                     stack[0x7fffffff0ffffd20-8] <= (0x7fffffff0ffffdf0)
005e0824:pop    %rdi                     
005e0825:mov    %rax,%rbp                
005e0828:jmpq   f7dec <isl::iostreams:...jmpq => (0xf7dec)
000f7918:callq  ab2a0 <std::istream::r...
000f791d:jmpq   639297 <_end+0x1d373f>   jmpq => (0x639297)
000f7dec:callq  ab0c0 <isl::iostreams:...
000f7df1:jmpq   152a64 <EVP_MD_pkey_ty...jmpq => (0x152a64)
00639297:movswq 0xb0(%rsp),%rax          
006392a0:jmpq   544ee2 <_end+0xdf38a>    jmpq => (0x544ee2)
00152a64:mov    0x10(%rsp),%rdi          
00152a69:push   %rbp                     stack[0x7fffffff0ffffd18-8] <= (0x0)
00152a6a:pop    %rsi                     
00152a6b:jmpq   f7df9 <isl::iostreams:...jmpq => (0xf7df9)
00544ee2:xor    %r12d,%r12d              
00544ee5:movswl %ax,%edi                 
00544ee8:add    $0x1,%edi                edi <= (0x1+1)
00544eeb:jmpq   631316 <_end+0x1cb7be>   jmpq => (0x631316)
000f7df9:callq  f8830 <void boost::sha...
000f7dfe:jmpq   5272c5 <_end+0xc176d>    jmpq => (0x5272c5)
00631316:movslq %edi,%rdi                
00631319:test   %rdi,%rdi                
0063131c:mov    %rbp,-0x8(%rsp)          stack[0x7fffffff0ffffd10+-8] <= rbp(0x0)
00631321:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd10+-8)
00631326:lea    -0x53948d(%rip),%rbp  ...rbp <= (0xf7ea0)
0063132d:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd08+-8)
00631332:jmpq   574104 <_end+0x10e5ac>   jmpq => (0x574104)
005272c5:mov    $0x10,%edi               
005272ca:lea    0xe0(%rsp),%r12          r12 <= rsp(0x7fffffff0ffffd00+224)
005272d2:jmpq   f7e0b <isl::iostreams:...jmpq => (0xf7e0b)
00574104:mov    %rbp,(%rsp)              stack[0x7fffffff0ffffd00+0] <= rbp(0xf7ea0)
00574108:lea    -0x47c7d4(%rip),%rbp  ...rbp <= (0xf793b)
0057410f:cmovne (%rsp),%rbp              rbp => $VAR1 = 1014075;
()
00574114:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd00+8)
00574119:xchg   %rbp,(%rsp)              stack[0x7fffffff0ffffd08] <= rbp(0x0)
0057411d:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd08+8)
00574122:jmpq   *-0x8(%rsp)              jmpq => -----------------------   (0xf793b,0xf7ea0)
000f7e0b:callq  a7d40 <__cxa_allocate_...
000f7e10:jmpq   577ac0 <_end+0x111f68>   jmpq => (0x577ac0)
000f793b:jmpq   606700 <_end+0x1a0ba8>   jmpq => (0x606700)
000f7ea0:callq  aa060 <operator new(un...
000f7ea5:jmpq   556f79 <_end+0xf1421>    jmpq => (0x556f79)
00577ac0:mov    0x18(%rsp),%rdx          
00577ac5:lea    -0x3a020c(%rip),%rsi  ...rsi <= (0x1d78c0)
00577acc:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd10+-8)
00577ad1:mov    %r12,(%rsp)              stack[0x7fffffff0ffffd08+0] <= r12(0x7fffffff0ffffde0)
00577ad5:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd08+8)
00577ada:mov    -0x8(%rsp),%rdi          
00577adf:mov    %rax,%rbp                
00577ae2:jmpq   f7e22 <isl::iostreams:...jmpq => (0xf7e22)
00606700:movb   $0x0,(%r12,%rax,1)       
00606705:movswq 0xb0(%rsp),%rdx          
0060670e:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd10+-8)
00606713:mov    %r12,(%rsp)              stack[0x7fffffff0ffffd08+0] <= r12(0x7fffffff0ffffde0)
00606717:mov    (%rsp),%rsi              
0060671b:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffd08+8)
00606720:push   %rbx                     stack[0x7fffffff0ffffd10-8] <= (0x7fffffff0ffffe50)
00606721:pop    %rdi                     
00606722:jmpq   f794f <isl::iostreams:...jmpq => (0xf794f)
00556f79:push   %rax                     stack[0x7fffffff0ffffd08-8] <= (0x7fffffff0ffffdf0)
00556f7a:pop    %r12                     
00556f7c:movswq 0xb0(%rsp),%rax          
00556f85:mov    %rdi,-0x8(%rsp)          stack[0x7fffffff0ffffd00+-8] <= rdi(0x7fffffff0ffffe60)
00556f8a:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd00+-8)
00556f8f:lea    -0x45f65b(%rip),%rdi  ...rdi <= (0xf793b)
00556f96:xchg   %rdi,(%rsp)              stack[0x7fffffff0ffffcf8] <= rdi(0x0)
00556f9a:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffcf8+8)
00556f9f:jmpq   *-0x8(%rsp)              jmpq => -----------------------  (0xf793b)
000f7e22:callq  aa9b0 <std::basic_stri...
000f7e27:jmpq   536977 <_end+0xd0e1f>    jmpq => (0x536977)
000f794f:callq  ab2a0 <std::istream::r...
000f7954:jmpq   560ec1 <_end+0xfb369>    jmpq => (0x560ec1)
00536977:mov    %r12,-0x8(%rsp)          stack[0x7fffffff0ffffd00+-8] <= r12(0x7fffffff0ffffde0)
0053697c:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd00+-8)
00536981:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffcf8+8)
00536986:mov    -0x8(%rsp),%rsi          
0053698b:mov    %rbp,-0x8(%rsp)          stack[0x7fffffff0ffffd00+-8] <= rbp(0x0)
00536990:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd00+-8)
00536995:mov    (%rsp),%rdi              
00536999:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffcf8+8)
0053699e:jmpq   f7e2d <isl::iostreams:...jmpq => (0xf7e2d)
00560ec1:movswl 0xb0(%rsp),%eax          
00560ec9:lea    0x1(%rax,%rax,1),%edi    
00560ecd:movslq %edi,%rdi                
00560ed0:jmpq   f7963 <isl::iostreams:...jmpq => (0xf7963)
000f7e2d:callq  aa190 <std::ios_base::...
000f7e32:jmpq   6309bc <_end+0x1cae64>   jmpq => (0x6309bc)
000f7963:callq  aa060 <operator new(un...
000f7968:jmpq   63b24b <_end+0x1d56f3>   jmpq => (0x63b24b)
006309bc:mov    0xe0(%rsp),%rax          
006309c4:mov    %r15,-0x8(%rsp)          stack[0x7fffffff0ffffd00+-8] <= r15(0x7fffffff0ffffe38)
006309c9:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffd00+-8)
006309ce:mov    (%rsp),%rsi              
006309d2:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffcf8+8)
006309d7:lea    -0x18(%rax),%rdi         rdi <= rax(0x7fffffff0ffffdf0+-24)
006309db:jmpq   f7e41 <isl::iostreams:...jmpq => (0xf7e41)
0063b24b:push   %rax                     stack[0x7fffffff0ffffd00-8] <= (0x7fffffff0ffffdf0)
0063b24c:pop    %r13                     
0063b24e:movswl 0xb0(%rsp),%eax          
0063b256:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffcf8+-8)
0063b25b:jmpq   58b28b <_end+0x125733>   jmpq => (0x58b28b)
000f7e41:callq  a8600 <std::string::_R...
000f7e46:jmpq   6302b0 <_end+0x1ca758>   jmpq => (0x6302b0)
0058b28b:mov    %r12,(%rsp)              stack[0x7fffffff0ffffcf0+0] <= r12(0x7fffffff0ffffde0)
0058b28f:mov    (%rsp),%rdi              
0058b293:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffcf0+8)
0058b298:lea    -0x8(%rsp),%rsp          rsp <= rsp(0x7fffffff0ffffcf8+-8)
0058b29d:mov    %r13,(%rsp)              stack[0x7fffffff0ffffcf0+0] <= r13(0x0)
0058b2a1:jmpq   53724f <_end+0xd16f7>    jmpq => (0x53724f)
006302b0:mov    -0x1d4067(%rip),%rdx  ...
006302b7:mov    -0x1d348e(%rip),%rsi  ...
006302be:mov    %rbp,%rdi                
006302c1:jmpq   f7e57 <isl::iostreams:...jmpq => (0xf7e57)
0053724f:mov    (%rsp),%rsi              
00537253:lea    0x8(%rsp),%rsp           rsp <= rsp(0x7fffffff0ffffcf0+8)
00537258:add    %eax,%eax                
0053725a:cltq                            
0053725c:movb   $0x0,0x0(%r13,%rax,1)    
00537262:movswq 0xb0(%rsp),%rdx          
0053726b:jmpq   f798c <isl::iostreams:...jmpq => (0xf798c)
000f7e57:callq  ad0a0 <__cxa_throw@plt>  
000f7e5c:jmp    f7de2 <isl::iostreams:...jcond +> (0x0)
000f7e5e:int3                            
000f7e5f:jg     f7e49 <isl::iostreams:...jcond +> (0x0)
000f7e61:sti                             
000f7e62:and    %edi,%ebx                
Error: cannot resolve '0xf7e64' using 'objdump -C -d /opt/Xilinx-2015.4-newinstall/Vivado/2015.4/lib/lnx64.o/libisl_iostreams.so --start-address=0xf7e64 --stop-address=0xf7f64 2> /dev/null'
 at p.pl line 48.
Makefile.top.mk:2: recipe for target 'all' failed
make: *** [all] Error 255
